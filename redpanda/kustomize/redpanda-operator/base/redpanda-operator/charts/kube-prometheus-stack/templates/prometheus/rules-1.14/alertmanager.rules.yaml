---
# Source: redpanda-operator/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/alertmanager.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: redpanda-operator-kube-pro-alertmanager.rules
  namespace: redpanda-system
  labels:
    app: kube-prometheus-stack
    
    chart: kube-prometheus-stack-13.13.1
    release: "redpanda-operator"
    heritage: "Helm"
spec:
  groups:
  - name: alertmanager.rules
    rules:
    - alert: AlertmanagerConfigInconsistent
      annotations:
        message: 'The configuration of the instances of the Alertmanager cluster `{{ $labels.namespace }}/{{ $labels.service }}` are out of sync.

          {{ range printf "alertmanager_config_hash{namespace=\"%s\",service=\"%s\"}" $labels.namespace $labels.service | query }}

          Configuration hash for pod {{ .Labels.pod }} is "{{ printf "%.f" .Value }}"

          {{ end }}

          '
      expr: count by(namespace,service) (count_values by(namespace,service) ("config_hash", alertmanager_config_hash{job="redpanda-operator-kube-pro-alertmanager",namespace="redpanda-system"})) != 1
      for: 5m
      labels:
        severity: critical
    - alert: AlertmanagerFailedReload
      annotations:
        message: Reloading Alertmanager's configuration has failed for {{ $labels.namespace }}/{{ $labels.pod}}.
      expr: alertmanager_config_last_reload_successful{job="redpanda-operator-kube-pro-alertmanager",namespace="redpanda-system"} == 0
      for: 10m
      labels:
        severity: warning
    - alert: AlertmanagerMembersInconsistent
      annotations:
        message: Alertmanager has not found all other members of the cluster.
      expr: |-
        alertmanager_cluster_members{job="redpanda-operator-kube-pro-alertmanager",namespace="redpanda-system"}
          != on (service) GROUP_LEFT()
        count by (service) (alertmanager_cluster_members{job="redpanda-operator-kube-pro-alertmanager",namespace="redpanda-system"})
      for: 5m
      labels:
        severity: critical
