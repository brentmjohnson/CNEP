pilot:
  env:
    ISTIO_DUAL_STACK: true
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
sidecarInjectorWebhook:
  enableNamespacesByDefault: true
meshConfig:
  defaultConfig:
    holdApplicationUntilProxyStarts: true
    proxyMetadata:
      # EXIT_ON_ZERO_ACTIVE_CONNECTIONS: "true"
      ISTIO_AGENT_DUAL_STACK: "true"
      # Enable basic DNS proxying
      ISTIO_META_DNS_CAPTURE: "true"
      # Enable automatic address allocation, optional
      ISTIO_META_DNS_AUTO_ALLOCATE: "true"
      # MINIMUM_DRAIN_DURATION: 5s
    # terminationDrainDuration: 60s
    # tracing:
    #   sampling: 100.0
    #   zipkin:
    #     address: $(HOST_IP):9411
  # defaultProviders:
  #   accessLogging:
  #     # - envoy
  #     - otel
  #   tracing:
  #     - opencensus
  enableTracing: true
  extensionProviders:
    - name: opencensus
      opencensus:
          service: daemonset-collector.opentelemetry-operator-system.svc.cluster.local
          port: 55678
          context:
          - W3C_TRACE_CONTEXT
    - name: otel
      envoyOtelAls:
        service: daemonset-collector.opentelemetry-operator-system.svc.cluster.local
        port: 4317
        logFormat:
          labels:
            start_time: "%START_TIME%"
            method: "%REQ(:METHOD)%"
            path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
            protocol: "%PROTOCOL%"
            response_code: "%RESPONSE_CODE%"
            response_flags: "%RESPONSE_FLAGS%"
            response_code_details: "%RESPONSE_CODE_DETAILS%"
            connection_termination_details: "%CONNECTION_TERMINATION_DETAILS%"
            upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
            bytes_received: "%BYTES_RECEIVED%"
            bytes_sent: "%BYTES_SENT%"
            duration: "%DURATION%"
            upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
            x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
            user_agent: "%REQ(USER-AGENT)%"
            request_id: "%REQ(X-REQUEST-ID)%"
            authority: "%REQ(:AUTHORITY)%"
            upstream_host: "%UPSTREAM_HOST%"
            upstream_cluster: "%UPSTREAM_CLUSTER%"
            upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
            downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
            downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
            requested_server_name: "%REQUESTED_SERVER_NAME%"
            route_name: "%ROUTE_NAME%"
            # traceid: "%REQ(X-B3-TRACEID)%"
            traceparent: "%REQ(TRACEPARENT)%"
global:
  proxy:
    resources:
      limits: {}
