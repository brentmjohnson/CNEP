apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: istio-system
  name: istiocontrolplane
spec:
  profile: default
  components:
    cni:
      enabled: true
    ingressGateways:
    - name: istio-ingressgateway
      enabled: false
    egressGateways:
    - name: istio-egressgateway
      enabled: true
    pilot:
      enabled: true
      k8s:
        hpaSpec:
          maxReplicas: 1
        env:
          # Disable istiod CA Sever functionality
        - name: ENABLE_CA_SERVER
          value: "false"
        overlays:
        - apiVersion: apps/v1
          kind: Deployment
          name: istiod
          patches:

            # Mount istiod serving and webhook certificate from Secret mount
          - path: spec.template.spec.containers.[name:discovery].args[-1]
            value: "--tlsCertFile=/etc/cert-manager/tls/tls.crt"
          - path: spec.template.spec.containers.[name:discovery].args[-1]
            value: "--tlsKeyFile=/etc/cert-manager/tls/tls.key"
          - path: spec.template.spec.containers.[name:discovery].args[-1]
            value: "--caCertFile=/etc/cert-manager/ca/root-cert.pem"

          - path: spec.template.spec.containers.[name:discovery].volumeMounts[-1]
            value:
              name: cert-manager
              mountPath: "/etc/cert-manager/tls"
              readOnly: true
          - path: spec.template.spec.containers.[name:discovery].volumeMounts[-1]
            value:
              name: ca-root-cert
              mountPath: "/etc/cert-manager/ca"
              readOnly: true

          - path: spec.template.spec.volumes[-1]
            value:
              name: cert-manager
              secret:
                secretName: istiod-tls
          - path: spec.template.spec.volumes[-1]
            value:
              name: ca-root-cert
              configMap:
                defaultMode: 420
                name: istio-ca-root-cert
  meshConfig:
    # accessLogFile: /dev/stdout
    # accessLogEncoding: JSON
    # accessLogFormat: |
    #   {
    #     "start_time": "%START_TIME%",
    #     "method": "%REQ(:METHOD)%",
    #     "path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
    #     "protocol": "%PROTOCOL%",
    #     "response_code": "%RESPONSE_CODE%",
    #     "response_flags": "%RESPONSE_FLAGS%",
    #     "response_code_details": "%RESPONSE_CODE_DETAILS%"
    #     "connection_termination_details": "%CONNECTION_TERMINATION_DETAILS%"
    #     "upstream_transport_failure_reason": "%UPSTREAM_TRANSPORT_FAILURE_REASON%",
    #     "bytes_received": "%BYTES_RECEIVED%",
    #     "bytes_sent": "%BYTES_SENT%",
    #     "duration": "%DURATION%",
    #     "upstream_service_time": "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%",
    #     "x_forwarded_for": "%REQ(X-FORWARDED-FOR)%",
    #     "user_agent": "%REQ(USER-AGENT)%",
    #     "request_id": "%REQ(X-REQUEST-ID)%",
    #     "authority": "%REQ(:AUTHORITY)%",
    #     "upstream_host": "%UPSTREAM_HOST%",
    #     "upstream_cluster": "%UPSTREAM_CLUSTER%",
    #     "upstream_local_address": "%UPSTREAM_LOCAL_ADDRESS%",
    #     "downstream_local_address": "%DOWNSTREAM_LOCAL_ADDRESS%",
    #     "downstream_remote_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
    #     "requested_server_name": "%REQUESTED_SERVER_NAME%",
    #     "route_name": "%ROUTE_NAME%",
    #     "traceid": "%REQ(X-B3-TRACEID)%"
    #   }
    defaultConfig:
      discoveryAddress: istiod.istio-system.svc:15012
      proxyMetadata:
        # Enable basic DNS proxying
        ISTIO_META_DNS_CAPTURE: "true"
        # Enable automatic address allocation, optional
        ISTIO_META_DNS_AUTO_ALLOCATE: "true"
      tracing:
        sampling: 100.0
        zipkin:
          address: daemonset-collector.opentelemetry-operator-system.svc.cluster.local:9411
    defaultProviders:
      accessLogging:
      # - envoy-custom-format
      - envoy
      - otel
    enablePrometheusMerge: false
    enableTracing: true
    extensionProviders:
      - name: otel
        envoyOtelAls:
          service: daemonset-collector.opentelemetry-operator-system.svc.cluster.local
          port: 4317
          logFormat:
            labels:
              start_time: "%START_TIME%"
              method: "%REQ(:METHOD)%"
              path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
              protocol: "%PROTOCOL%"
              response_code: "%RESPONSE_CODE%"
              response_flags: "%RESPONSE_FLAGS%"
              response_code_details: "%RESPONSE_CODE_DETAILS%"
              connection_termination_details: "%CONNECTION_TERMINATION_DETAILS%"
              upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
              bytes_received: "%BYTES_RECEIVED%"
              bytes_sent: "%BYTES_SENT%"
              duration: "%DURATION%"
              upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
              x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
              user_agent: "%REQ(USER-AGENT)%"
              request_id: "%REQ(X-REQUEST-ID)%"
              authority: "%REQ(:AUTHORITY)%"
              upstream_host: "%UPSTREAM_HOST%"
              upstream_cluster: "%UPSTREAM_CLUSTER%"
              upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
              downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
              downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
              requested_server_name: "%REQUESTED_SERVER_NAME%"
              route_name: "%ROUTE_NAME%"
              traceid: "%REQ(X-B3-TRACEID)%"
      - name: envoy-custom-format
        envoyFileAccessLog:
          logFormat:
            labels:
              start_time: "%START_TIME%"
              method: "%REQ(:METHOD)%"
              path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
              protocol: "%PROTOCOL%"
              response_code: "%RESPONSE_CODE%"
              response_flags: "%RESPONSE_FLAGS%"
              response_code_details: "%RESPONSE_CODE_DETAILS%"
              connection_termination_details: "%CONNECTION_TERMINATION_DETAILS%"
              upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
              bytes_received: "%BYTES_RECEIVED%"
              bytes_sent: "%BYTES_SENT%"
              duration: "%DURATION%"
              upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
              x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
              user_agent: "%REQ(USER-AGENT)%"
              request_id: "%REQ(X-REQUEST-ID)%"
              authority: "%REQ(:AUTHORITY)%"
              upstream_host: "%UPSTREAM_HOST%"
              upstream_cluster: "%UPSTREAM_CLUSTER%"
              upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
              downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
              downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
              requested_server_name: "%REQUESTED_SERVER_NAME%"
              route_name: "%ROUTE_NAME%"
              traceid: "%REQ(X-B3-TRACEID)%"
    rootNamespace: istio-system
    trustDomain: cluster.local
  values:
    cni:
      excludeNamespaces: []
    global:
      caAddress: cert-manager-istio-csr.cert-manager.svc.cluster.local:443
      proxy:
        tracer: zipkin
    sidecarInjectorWebhook:
      enableNamespacesByDefault: true