Release "postgres-operator-ui" does not exist. Installing it now.
NAME: postgres-operator-ui
LAST DEPLOYED: Mon Sep 26 12:33:41 2022
NAMESPACE: postgres
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
envs:
  operatorApiUrl: http://postgres-operator.postgres.svc.cluster.local:8080
  targetNamespace: postgres
  teams:
  - postgres
extraEnvs:
- name: AWS_ENDPOINT
  value: http://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
- name: WALE_S3_ENDPOINT
  value: http+path://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
- name: SPILO_S3_BACKUP_PREFIX
  value: spilo/
- name: AWS_ACCESS_KEY_ID
  value: AAAAXW2J2UBFUHGI8X06
- name: AWS_SECRET_ACCESS_KEY
  value: HNdjaq40OBlfd2TuWBlRFlvRhuxgbfoNiXamDcXD
- name: SPILO_S3_BACKUP_BUCKET
  value: postgres-bucket-80d58bf3-2699-435d-9d2e-4621ec3c21a6

COMPUTED VALUES:
envs:
  operatorApiUrl: http://postgres-operator.postgres.svc.cluster.local:8080
  operatorClusterNameLabel: cluster-name
  resourcesVisible: "False"
  targetNamespace: postgres
  teams:
  - postgres
extraEnvs:
- name: AWS_ENDPOINT
  value: http://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
- name: WALE_S3_ENDPOINT
  value: http+path://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
- name: SPILO_S3_BACKUP_PREFIX
  value: spilo/
- name: AWS_ACCESS_KEY_ID
  value: AAAAXW2J2UBFUHGI8X06
- name: AWS_SECRET_ACCESS_KEY
  value: HNdjaq40OBlfd2TuWBlRFlvRhuxgbfoNiXamDcXD
- name: SPILO_S3_BACKUP_BUCKET
  value: postgres-bucket-80d58bf3-2699-435d-9d2e-4621ec3c21a6
image:
  pullPolicy: IfNotPresent
  registry: registry.opensource.zalan.do
  repository: acid/postgres-operator-ui
  tag: v1.8.2
ingress:
  annotations: {}
  enabled: false
  hosts:
  - host: ui.example.org
    paths:
    - ""
  ingressClassName: ""
  tls: []
rbac:
  create: true
replicaCount: 1
resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 100Mi
service:
  port: "80"
  type: ClusterIP
serviceAccount:
  create: true
  name: null

HOOKS:
MANIFEST:
---
# Source: postgres-operator-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-operator-ui
  namespace: postgres
  labels:
    app.kubernetes.io/name: postgres-operator-ui
    helm.sh/chart: postgres-operator-ui-1.8.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: postgres-operator-ui
---
# Source: postgres-operator-ui/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgres-operator-ui
  labels:
    app.kubernetes.io/name: postgres-operator-ui
    helm.sh/chart: postgres-operator-ui-1.8.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: postgres-operator-ui
rules:
- apiGroups:
  - acid.zalan.do
  resources:
  - postgresqls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
# Source: postgres-operator-ui/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgres-operator-ui
  labels:
    app.kubernetes.io/name: postgres-operator-ui
    helm.sh/chart: postgres-operator-ui-1.8.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: postgres-operator-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgres-operator-ui
subjects:
- kind: ServiceAccount
  name: postgres-operator-ui
  namespace: postgres
---
# Source: postgres-operator-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator-ui
    helm.sh/chart: postgres-operator-ui-1.8.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: postgres-operator-ui
  name: postgres-operator-ui
  namespace: postgres
spec:
  ports:
    - port: 80
      targetPort: 8081
      protocol: TCP
  selector:
    app.kubernetes.io/instance: postgres-operator-ui
    app.kubernetes.io/name: postgres-operator-ui
  type: ClusterIP
---
# Source: postgres-operator-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator-ui
    helm.sh/chart: postgres-operator-ui-1.8.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: postgres-operator-ui
  name: postgres-operator-ui
  namespace: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-operator-ui
      app.kubernetes.io/instance: postgres-operator-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-operator-ui
        app.kubernetes.io/instance: postgres-operator-ui
    spec:
      serviceAccountName: postgres-operator-ui
      containers:
        - name: "service"
          image: "registry.opensource.zalan.do/acid/postgres-operator-ui:v1.8.2"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              protocol: "TCP"
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: "APP_URL"
              value: "http://localhost:8081"
            - name: "OPERATOR_API_URL"
              value: "http://postgres-operator.postgres.svc.cluster.local:8080"
            - name: "OPERATOR_CLUSTER_NAME_LABEL"
              value: "cluster-name"
            - name: "RESOURCES_VISIBLE"
              value: "False"
            - name: "TARGET_NAMESPACE"
              value: "postgres"
            - name: "TEAMS"
              value: |-
                [
                  "postgres"
                ]
            - name: "OPERATOR_UI_CONFIG"
              value: |-
                {
                  "docs_link":"https://postgres-operator.readthedocs.io/en/latest/",
                  "dns_format_string": "{1}-{0}.{2}",
                  "databases_visible": true,
                  "master_load_balancer_visible": true,
                  "nat_gateways_visible": false,
                  "replica_load_balancer_visible": true,
                  "resources_visible": true,
                  "users_visible": true,
                  "cost_ebs": 0.0952,
                  "cost_iops": 0.006,
                  "cost_throughput": 0.0476,
                  "cost_core": 0.0575,
                  "cost_memory": 0.014375,
                  "postgresql_versions": [
                    "14",
                    "13",
                    "12",
                    "11"
                  ]
                }
            - name: AWS_ENDPOINT
              value: http://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
            - name: WALE_S3_ENDPOINT
              value: http+path://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
            - name: SPILO_S3_BACKUP_PREFIX
              value: spilo/
            - name: AWS_ACCESS_KEY_ID
              value: AAAAXW2J2UBFUHGI8X06
            - name: AWS_SECRET_ACCESS_KEY
              value: HNdjaq40OBlfd2TuWBlRFlvRhuxgbfoNiXamDcXD
            - name: SPILO_S3_BACKUP_BUCKET
              value: postgres-bucket-80d58bf3-2699-435d-9d2e-4621ec3c21a6

NOTES:
To verify that postgres-operator has started, run:

  kubectl --namespace=postgres get pods -l "app.kubernetes.io/name=postgres-operator-ui"
