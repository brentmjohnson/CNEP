apiVersion: kubeadm.k8s.io/v1beta3
caCertPath: /etc/kubernetes/pki/ca.crt
controlPlane:
  certificateKey: "{{ hostvars[groups['controls'][0]].kubecertkey }}"
  localAPIEndpoint:
    advertiseAddress: "{{ hostvars[inventory_hostname].host_ip }}"
    bindPort: 6443
discovery:
  bootstrapToken:
    apiServerEndpoint: "{{ hostvars[groups['loadbalancer'][0]].host_fqdn if ( k8s.control_plane.vms > 1 ) else hostvars[groups['controls'][0]].host_fqdn }}:6443"
    caCertHashes:
    - "{{ hostvars[groups['controls'][0]].kubehash }}"
    token: "{{ hostvars[groups['controls'][0]].kubetoken }}"
  timeout: 5m0s
  tlsBootstrapToken: "{{ hostvars[groups['controls'][0]].kubetoken }}"
kind: JoinConfiguration
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  imagePullPolicy: Always
  kubeletExtraArgs:
    feature-gates: APIServerTracing=false,NodeSwap=true
    node-ip: {{ hostvars[inventory_hostname].host_ipv4 }},{{ hostvars[inventory_hostname].host_ipv6 }}
  name: "{{ hostvars[inventory_hostname].host_fqdn }}"
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane