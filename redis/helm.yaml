Release "redis-operator" does not exist. Installing it now.
NAME: redis-operator
LAST DEPLOYED: Wed Sep 28 11:04:09 2022
NAMESPACE: redis
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
affinity: {}
nodeSelector: {}
priorityClassName: ""
redisOperator:
  imageName: quay.io/opstree/redis-operator
  imagePullPolicy: Always
  imageTag: v0.11.0
  name: redis-operator
  podAnnotations: {}
  podLabels: {}
replicas: 1
resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 500m
    memory: 500Mi
serviceAccountName: redis-operator
tolerateAllTaints: false
tolerations: []

HOOKS:
MANIFEST:
---
# Source: redis-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-operator
  namespace: redis
  labels:
    control-plane: "redis-operator"
    app.kubernetes.io/name: redis-operator
    helm.sh/chart: redis-operator-0.11.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: redis-operator
    app.kubernetes.io/version: 0.11.0
---
# Source: redis-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: redis-operator
  labels:
    control-plane: "redis-operator"
    app.kubernetes.io/name: redis-operator
    helm.sh/chart: redis-operator-0.11.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: redis-operator
    app.kubernetes.io/version: 0.11.0
rules:
- apiGroups:
  - redis.redis.opstreelabs.in
  resources:
  - rediss
  - redisclusters
  - redis
  - rediscluster
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redis.redis.opstreelabs.in
  resources:
  - redis/finalizers
  - rediscluster/finalizers
  verbs:
  - update
- apiGroups:
  - redis.redis.opstreelabs.in
  resources:
  - redis/status
  - rediscluster/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - pods/exec
  - pods
  - services
  - configmaps
  - events
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
    - "policy"
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redis-operator/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: redis-operator
  labels:
    control-plane: "redis-operator"
    app.kubernetes.io/name: redis-operator
    helm.sh/chart: redis-operator-0.11.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: redis-operator
    app.kubernetes.io/version: 0.11.0
subjects:
- kind: ServiceAccount
  name: redis-operator
  namespace: redis
roleRef:
  kind: ClusterRole
  name: redis-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: redis-operator/templates/operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-operator
  namespace: redis
  labels:
    control-plane: "redis-operator"
    app.kubernetes.io/name: redis-operator
    helm.sh/chart: redis-operator-0.11.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: redis-operator
    app.kubernetes.io/version: 0.11.0
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis-operator
  template:
    metadata:
      annotations:
      labels:
        name: redis-operator
    spec:
      containers:
      - name: "redis-operator"
        image: "quay.io/opstree/redis-operator:v0.11.0"
        imagePullPolicy: Always
        command:
        - /manager
        args:
        - --leader-elect
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
      nodeSelector:
      priorityClassName: 
      tolerations:
      serviceAccountName: "redis-operator"
      serviceAccount: "redis-operator"

