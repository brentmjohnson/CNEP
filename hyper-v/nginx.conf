load_module /usr/lib/nginx/modules/ngx_stream_module.so;

user                            www;
#worker_processes                auto; # it will be determinate automatically by the number of core
worker_processes                1;

error_log                       /var/log/nginx/error.log warn;
#pid                             /var/run/nginx/nginx.pid; # it permit you to use /etc/init.d/nginx reload|restart|stop|start

events {
    worker_connections          1024;
}

# http {
#     include                     /etc/nginx/mime.types;
#     default_type                application/octet-stream;
#     sendfile                    on;
#     access_log                  /var/log/nginx/access.log;
#     keepalive_timeout           3000;
#     server {
#         listen                  80;
#         root                    /www;
#         index                   index.html index.htm;
#         server_name             localhost;
#         client_max_body_size    32m;
#         error_page              500 502 503 504  /50x.html;
#         location = /50x.html {
#               root              /var/lib/nginx/html;
#         }
#     }
# }

http {
   server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 302 https://$host$request_uri;
   }
}

stream {
    upstream worker_nodes {
        least_conn;
        server 10.0.0.6:30080 max_fails=3 fail_timeout=5s;
        server 10.0.0.7:30080 max_fails=3 fail_timeout=5s;
        server 10.0.0.8:30080 max_fails=3 fail_timeout=5s;
    }
    server {
        listen 443 ssl;
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        ssl_preread on;
        # proxy_protocol on;
        proxy_pass worker_nodes;
    }

    upstream control_nodes {
        least_conn;
        server 10.0.0.3:6443 max_fails=3 fail_timeout=5s;
        # server 10.0.0.4:6443 max_fails=3 fail_timeout=5s;
        # server 10.0.0.5:6443 max_fails=3 fail_timeout=5s;
    }
    server {
        listen     6443;
        proxy_pass control_nodes;
    }
}