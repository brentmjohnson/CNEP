Release "jaegertracing" does not exist. Installing it now.
NAME: jaegertracing
LAST DEPLOYED: Thu Sep 15 12:02:30 2022
NAMESPACE: observability
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
rbac:
  clusterRole: true

COMPUTED VALUES:
affinity: {}
certs:
  certificate:
    create: true
    namespace: ""
    secretName: ""
  issuer:
    create: true
    name: ""
extraEnv: []
extraLabels: {}
image:
  imagePullSecrets: []
  pullPolicy: IfNotPresent
  repository: jaegertracing/jaeger-operator
  tag: 1.36.0
jaeger:
  create: false
  namespace: null
  spec: {}
nodeSelector: {}
priorityClassName: null
rbac:
  clusterRole: true
  create: true
  pspEnabled: false
resources: {}
securityContext: {}
service:
  annotations: {}
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
  name: null
tolerations: []
webhooks:
  mutatingWebhook:
    create: true
  service:
    annotations: {}
    create: true
    name: ""
  validatingWebhook:
    create: true

HOOKS:
MANIFEST:
---
# Source: jaeger-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaegertracing-jaeger-operator
  namespace: observability
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
---
# Source: jaeger-operator/templates/role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jaegertracing-jaeger-operator
  namespace: observability
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - console.openshift.io
  resources:
  - consolelinks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jaegertracing.io
  resources:
  - jaegers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jaegertracing.io
  resources:
  - jaegers/finalizers
  verbs:
  - update
- apiGroups:
  - jaegertracing.io
  resources:
  - jaegers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkas
  - kafkausers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - logging.openshift.io
  resources:
  - elasticsearch
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - logging.openshift.io
  resources:
  - elasticsearches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: jaeger-operator/templates/role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jaegertracing-jaeger-operator
  namespace: observability
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
subjects:
- kind: ServiceAccount
  namespace: observability
  name: jaegertracing-jaeger-operator
roleRef:
  kind: ClusterRole
  name: jaegertracing-jaeger-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: jaeger-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaegertracing-jaeger-operator-metrics
  namespace: observability
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
spec:
  ports:
  - name: metrics
    port: 8383
    protocol: TCP
    targetPort: 8383
  selector:
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
  type: ClusterIP
---
# Source: jaeger-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
  name: jaeger-operator-webhook-service
  namespace: observability
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
---
# Source: jaeger-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaegertracing-jaeger-operator
  namespace: observability
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
spec:
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: jaeger-operator
      app.kubernetes.io/instance: jaegertracing
  template:
    metadata:
      name: jaegertracing-jaeger-operator
      labels:
        
        app.kubernetes.io/name: jaeger-operator
        app.kubernetes.io/instance: jaegertracing
    spec:
      serviceAccountName: jaegertracing-jaeger-operator
      containers:
        - name: jaegertracing-jaeger-operator
          image: "jaegertracing/jaeger-operator:1.36.0"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8383
            name: metrics
          - containerPort: 9443
            name: webhook-server
            protocol: TCP  
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          args: ["start"]
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "jaegertracing-jaeger-operator"
          resources:
            {}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: jaeger-operator-service-cert
---
# Source: jaeger-operator/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: jaeger-operator-service-cert
  namespace: observability
spec:
  dnsNames:
  - "jaeger-operator-webhook-service.observability.svc"
  - "jaeger-operator-webhook-service.observability.svc.cluster.local"
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: jaeger-operator-service-cert
  subject:
    organizationalUnits:
      - "jaeger-operator"
---
# Source: jaeger-operator/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: observability
spec:
  selfSigned: {}
---
# Source: jaeger-operator/templates/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: observability/jaeger-operator-service-cert
  labels:
    
    app.kubernetes.io/name: jaeger-operator
    app.kubernetes.io/instance: jaegertracing
  name: jaeger-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: jaeger-operator-webhook-service
      namespace: observability
      path: /mutate-v1-deployment
  failurePolicy: Ignore
  name: deployment.sidecar-injector.jaegertracing.io
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: NotIn
      values:
      - jaeger-operator
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - deployments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: jaeger-operator-webhook-service
      namespace: observability
      path: /mutate-jaegertracing-io-v1-jaeger
  failurePolicy: Fail
  name: mjaeger.kb.io
  rules:
  - apiGroups:
    - jaegertracing.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - jaegers
  sideEffects: None
---
# Source: jaeger-operator/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: observability/jaeger-operator-service-cert
  name: jaeger-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: jaeger-operator-webhook-service
      namespace: observability
      path: /validate-jaegertracing-io-v1-jaeger
  failurePolicy: Fail
  name: vjaeger.kb.io
  rules:
  - apiGroups:
    - jaegertracing.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - jaegers
  sideEffects: None

NOTES:
jaeger-operator is installed.


Check the jaeger-operator logs
  export POD=$(kubectl get pods -l app.kubernetes.io/instance=jaegertracing -l app.kubernetes.io/name=jaeger-operator --namespace observability --output name)
  kubectl logs $POD --namespace=observability
