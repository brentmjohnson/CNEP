apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed
  namespace: monitoring
---
apiVersion: v1
data:
  config.yaml: |-
    auth_enabled: false
    chunk_store_config:
      max_look_back_period: 168h
    common:
      compactor_address: http://loki-loki-distributed-compactor:3100
    compactor:
      compaction_interval: 5m
      shared_store: s3
      working_directory: /data/compactor
    distributor:
      ring:
        kvstore:
          store: memberlist
    frontend:
      compress_responses: true
      log_queries_longer_than: 5s
      tail_proxy_url: http://loki-loki-distributed-querier:3100
    frontend_worker:
      frontend_address: loki-loki-distributed-query-frontend:9095
    ingester:
      chunk_block_size: 262144
      chunk_encoding: lz4
      chunk_idle_period: 2h
      chunk_retain_period: 1m
      chunk_target_size: 1048576
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      max_chunk_age: 24h
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal
    ingester_client:
      grpc_client_config:
        max_send_msg_size: 8388608
    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      max_query_lookback: 168h
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
    memberlist:
      join_members:
      - loki-loki-distributed-memberlist
    query_range:
      align_queries_with_step: true
      cache_results: true
      max_retries: 5
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            ttl: 24h
    ruler:
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      storage:
        local:
          directory: /etc/loki/rules
        type: local
    runtime_config:
      file: /var/loki-distributed-runtime/runtime.yaml
    schema_config:
      configs:
      - chunks:
          period: 24h
          prefix: chunk_
        from: '2023-02-15'
        index:
          period: 24h
          prefix: index_
        object_store: s3
        schema: v11
        store: cassandra
    server:
      grpc_server_max_recv_msg_size: 8388608
      http_listen_port: 3100
    storage_config:
      aws:
        access_key_id: <secret>
        bucketnames: loki-bucket-65cf600a-0fe2-498f-ba83-fbba8370392a
        endpoint: rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local:80
        insecure: true
        s3forcepathstyle: true
        secret_access_key: <secret>
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
        shared_store: filesystem
      cassandra:
        addresses: scylla-client.scylla
        auth: true
        consistency: LOCAL_ONE
        disable_initial_host_lookup: true
        keyspace: loki
        password: <password>
        replication_factor: 1
        username: <user>
      filesystem:
        directory: /var/loki/chunks
    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed
  namespace: monitoring
---
apiVersion: v1
data:
  runtime.yaml: |2

    {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-runtime
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-distributor
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-ingester
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: loki-loki-distributed-ingester-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - appProtocol: tcp
    name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-memberlist
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - appProtocol: tcp
    name: tcp
    port: 7946
    protocol: TCP
    targetPort: http-memberlist
  selector:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-querier
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: loki-loki-distributed-querier-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - appProtocol: tcp
    name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-query-frontend
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
    prometheus.io/service-monitor: "false"
  name: loki-loki-distributed-query-frontend-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: table-manager
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-table-manager
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: table-manager
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-distributor
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: bee01808f323f124f8e3dbac3548e9d624faf805e1a4dcaadf4d9d6f59aeb20b
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: distributor
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: distributor
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=distributor
        image: docker.io/grafana/loki:2.7.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: distributor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-query-frontend
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: bee01808f323f124f8e3dbac3548e9d624faf805e1a4dcaadf4d9d6f59aeb20b
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: query-frontend
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=query-frontend
        image: docker.io/grafana/loki:2.7.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: query-frontend
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: table-manager
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-table-manager
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: table-manager
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  template:
    metadata:
      annotations:
        checksum/config: bee01808f323f124f8e3dbac3548e9d624faf805e1a4dcaadf4d9d6f59aeb20b
      labels:
        app.kubernetes.io/component: table-manager
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: table-manager
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: table-manager
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=table-manager
        image: docker.io/grafana/loki:2.7.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: table-manager
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-ingester
  namespace: monitoring
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-loki-distributed-ingester-headless
  template:
    metadata:
      annotations:
        checksum/config: bee01808f323f124f8e3dbac3548e9d624faf805e1a4dcaadf4d9d6f59aeb20b
      labels:
        app.kubernetes.io/component: ingester
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: ingester
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: ingester
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=ingester
        image: docker.io/grafana/loki:2.7.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: ingester
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 300
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: ingester
            app.kubernetes.io/instance: loki
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
  updateStrategy:
    rollingUpdate:
      partition: 0
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-querier
  namespace: monitoring
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-loki-distributed-querier-headless
  template:
    metadata:
      annotations:
        checksum/config: bee01808f323f124f8e3dbac3548e9d624faf805e1a4dcaadf4d9d6f59aeb20b
      labels:
        app.kubernetes.io/component: querier
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=querier
        image: docker.io/grafana/loki:2.7.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: querier
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: querier
            app.kubernetes.io/instance: loki
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed
  namespace: monitoring
spec:
  groups: []
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-distributor
  namespace: monitoring
spec:
  endpoints:
  - port: http
    scheme: http
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-ingester
  namespace: monitoring
spec:
  endpoints:
  - port: http
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      insecureSkipVerify: true
      keyFile: /etc/prom-certs/key.pem
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-querier
  namespace: monitoring
spec:
  endpoints:
  - port: http
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      insecureSkipVerify: true
      keyFile: /etc/prom-certs/key.pem
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-query-frontend
  namespace: monitoring
spec:
  endpoints:
  - port: http
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      insecureSkipVerify: true
      keyFile: /etc/prom-certs/key.pem
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: table-manager
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.7.4
    helm.sh/chart: loki-distributed-0.69.9
  name: loki-loki-distributed-table-manager
  namespace: monitoring
spec:
  endpoints:
  - port: http
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      insecureSkipVerify: true
      keyFile: /etc/prom-certs/key.pem
  selector:
    matchLabels:
      app.kubernetes.io/component: table-manager
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
---
apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
metadata:
  name: loki-bucket
  namespace: monitoring
spec:
  generateBucketName: loki-bucket
  storageClassName: ceph-bucket
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: loki-loki-distributed-distributor
  namespace: monitoring
spec:
  mtls:
    mode: UNSET
  portLevelMtls:
    "3100":
      mode: PERMISSIVE
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed