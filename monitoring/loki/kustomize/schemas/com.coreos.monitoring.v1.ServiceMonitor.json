{
    "definitions": {
      "com.coreos.monitoring.v1.ServiceMonitor": {
        "description": "ServiceMonitor defines monitoring for a set of services.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec": {
            "description": "Specification of desired Service selection for target discovery by Prometheus.",
            "properties": {
              "endpoints": {
                "description": "A list of endpoints allowed as part of this ServiceMonitor.",
                "items": {
                  "description": "Endpoint defines a scrapeable endpoint serving Prometheus metrics.",
                  "properties": {
                    "authorization": {
                      "description": "Authorization section for this endpoint",
                      "properties": {
                        "credentials": {
                          "description": "The secret's key that contains the credentials of the request",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object"
                        },
                        "type": {
                          "description": "Set the authentication type. Defaults to Bearer, Basic will cause an error",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "basicAuth": {
                      "description": "BasicAuth allow an endpoint to authenticate over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints",
                      "properties": {
                        "password": {
                          "description": "The secret in the service monitor namespace that contains the password for authentication.",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object"
                        },
                        "username": {
                          "description": "The secret in the service monitor namespace that contains the username for authentication.",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "bearerTokenFile": {
                      "description": "File to read bearer token for scraping targets.",
                      "type": "string"
                    },
                    "bearerTokenSecret": {
                      "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the service monitor and accessible by the Prometheus Operator.",
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "type": "object"
                    },
                    "followRedirects": {
                      "description": "FollowRedirects configures whether scrape requests follow HTTP 3xx redirects.",
                      "type": "boolean"
                    },
                    "honorLabels": {
                      "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
                      "type": "boolean"
                    },
                    "honorTimestamps": {
                      "description": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.",
                      "type": "boolean"
                    },
                    "interval": {
                      "description": "Interval at which metrics should be scraped If not specified Prometheus' global scrape interval is used.",
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$",
                      "type": "string"
                    },
                    "metricRelabelings": {
                      "description": "MetricRelabelConfigs to apply to samples before ingestion.",
                      "items": {
                        "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                        "properties": {
                          "action": {
                            "description": "Action to perform based on regex matching. Default is 'replace'",
                            "enum": [
                              "replace",
                              "keep",
                              "drop",
                              "hashmod",
                              "labelmap",
                              "labeldrop",
                              "labelkeep"
                            ],
                            "type": "string"
                          },
                          "modulus": {
                            "description": "Modulus to take of the hash of the source label values.",
                            "format": "int64",
                            "type": "integer"
                          },
                          "regex": {
                            "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                            "type": "string"
                          },
                          "replacement": {
                            "description": "Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'",
                            "type": "string"
                          },
                          "separator": {
                            "description": "Separator placed between concatenated source label values. default is ';'.",
                            "type": "string"
                          },
                          "sourceLabels": {
                            "description": "The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
                            "items": {
                              "description": "LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.",
                              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "targetLabel": {
                            "description": "Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "oauth2": {
                      "description": "OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.",
                      "properties": {
                        "clientId": {
                          "description": "The secret or configmap containing the OAuth2 client id",
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object"
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "clientSecret": {
                          "description": "The secret containing the OAuth2 client secret",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object"
                        },
                        "endpointParams": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Parameters to append to the token URL",
                          "type": "object"
                        },
                        "scopes": {
                          "description": "OAuth2 scopes used for the token request",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "tokenUrl": {
                          "description": "The URL to fetch the token from",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "clientId",
                        "clientSecret",
                        "tokenUrl"
                      ],
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "description": "Optional HTTP URL parameters",
                      "type": "object"
                    },
                    "path": {
                      "description": "HTTP path to scrape for metrics.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Name of the service port this endpoint refers to. Mutually exclusive with targetPort.",
                      "type": "string"
                    },
                    "proxyUrl": {
                      "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
                      "type": "string"
                    },
                    "relabelings": {
                      "description": "RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds relabelings for a few standard Kubernetes fields. The original scrape job's name is available via the `__tmp_prometheus_job_name` label. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                      "items": {
                        "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                        "properties": {
                          "action": {
                            "description": "Action to perform based on regex matching. Default is 'replace'",
                            "enum": [
                              "replace",
                              "keep",
                              "drop",
                              "hashmod",
                              "labelmap",
                              "labeldrop",
                              "labelkeep"
                            ],
                            "type": "string"
                          },
                          "modulus": {
                            "description": "Modulus to take of the hash of the source label values.",
                            "format": "int64",
                            "type": "integer"
                          },
                          "regex": {
                            "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                            "type": "string"
                          },
                          "replacement": {
                            "description": "Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'",
                            "type": "string"
                          },
                          "separator": {
                            "description": "Separator placed between concatenated source label values. default is ';'.",
                            "type": "string"
                          },
                          "sourceLabels": {
                            "description": "The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
                            "items": {
                              "description": "LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.",
                              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "targetLabel": {
                            "description": "Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "scheme": {
                      "description": "HTTP scheme to use for scraping.",
                      "type": "string"
                    },
                    "scrapeTimeout": {
                      "description": "Timeout after which the scrape is ended If not specified, the Prometheus global scrape timeout is used unless it is less than `Interval` in which the latter is used.",
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$",
                      "type": "string"
                    },
                    "targetPort": {
                      "description": "Name or number of the target port of the Pod behind the Service, the port must be specified with container port property. Mutually exclusive with port.",
                      "x-kubernetes-int-or-string": true
                    },
                    "tlsConfig": {
                      "description": "TLS configuration to use when scraping the endpoint",
                      "properties": {
                        "ca": {
                          "description": "Struct containing the CA cert to use for the targets.",
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object"
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "caFile": {
                          "description": "Path to the CA cert in the Prometheus container to use for the targets.",
                          "type": "string"
                        },
                        "cert": {
                          "description": "Struct containing the client cert file for the targets.",
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object"
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "certFile": {
                          "description": "Path to the client cert file in the Prometheus container for the targets.",
                          "type": "string"
                        },
                        "insecureSkipVerify": {
                          "description": "Disable target certificate validation.",
                          "type": "boolean"
                        },
                        "keyFile": {
                          "description": "Path to the client key file in the Prometheus container for the targets.",
                          "type": "string"
                        },
                        "keySecret": {
                          "description": "Secret containing the client key file for the targets.",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object"
                        },
                        "serverName": {
                          "description": "Used to verify the hostname for the targets.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "x-kubernetes-list-map-keys": [
                  "port",
                  "targetPort"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "targetPort",
                "x-kubernetes-patch-strategy": "merge"
              },
              "jobLabel": {
                "description": "Chooses the label of the Kubernetes `Endpoints`. Its value will be used for the `job`-label's value of the created metrics. \n Default & fallback value: the name of the respective Kubernetes `Endpoint`.",
                "type": "string"
              },
              "labelLimit": {
                "description": "Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.",
                "format": "int64",
                "type": "integer"
              },
              "labelNameLengthLimit": {
                "description": "Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.",
                "format": "int64",
                "type": "integer"
              },
              "labelValueLengthLimit": {
                "description": "Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.",
                "format": "int64",
                "type": "integer"
              },
              "namespaceSelector": {
                "description": "Selector to select which namespaces the Kubernetes Endpoints objects are discovered from.",
                "properties": {
                  "any": {
                    "description": "Boolean describing whether all namespaces are selected in contrast to a list restricting them.",
                    "type": "boolean"
                  },
                  "matchNames": {
                    "description": "List of namespace names to select from.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "podTargetLabels": {
                "description": "PodTargetLabels transfers labels on the Kubernetes `Pod` onto the created metrics.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "sampleLimit": {
                "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
                "format": "int64",
                "type": "integer"
              },
              "selector": {
                "description": "Selector to select Endpoints objects.",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "matchLabels": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "targetLabels": {
                "description": "TargetLabels transfers labels from the Kubernetes `Service` onto the created metrics.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "targetLimit": {
                "description": "TargetLimit defines a limit on the number of scraped targets that will be accepted.",
                "format": "int64",
                "type": "integer"
              }
            },
            "required": [
              "endpoints",
              "selector"
            ],
            "type": "object"
          }
        },
        "required": [
          "spec"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "monitoring.coreos.com",
            "kind": "ServiceMonitor",
            "version": "v1"
          }
        ]
      },
      "io.k8s.api.core.v1.Service": {
        "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServiceSpec",
            "description": "Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServiceStatus",
            "description": "Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "",
            "kind": "Service",
            "version": "v1"
          }
        ]
      },
      "io.k8s.api.core.v1.ServiceSpec": {
        "description": "ServiceSpec describes the attributes that a user creates on a service.",
        "properties": {
          "allocateLoadBalancerNodePorts": {
            "description": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.",
            "type": "boolean"
          },
          "clusterIP": {
            "description": "clusterIP is the IP address of the service and is usually assigned randomly. If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address. Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "string"
          },
          "clusterIPs": {
            "description": "ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly.  If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address.  Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName.  If this field is not specified, it will be initialized from the clusterIP field.  If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order). These IPs must correspond to the values of the ipFamilies field. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-kubernetes-list-type": "atomic"
          },
          "externalIPs": {
            "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalName": {
            "description": "externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\".",
            "type": "string"
          },
          "externalTrafficPolicy": {
            "description": "externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.\n\nPossible enum values:\n - `\"Cluster\"` routes traffic to all endpoints.\n - `\"Local\"` preserves the source IP of the traffic by routing only to endpoints on the same node as the traffic was received on (dropping the traffic if there are no local endpoints).",
            "enum": [
              "Cluster",
              "Local"
            ],
            "type": "string"
          },
          "healthCheckNodePort": {
            "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.",
            "format": "int32",
            "type": "integer"
          },
          "internalTrafficPolicy": {
            "description": "InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).",
            "type": "string"
          },
          "ipFamilies": {
            "description": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-kubernetes-list-type": "atomic"
          },
          "ipFamilyPolicy": {
            "description": "IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.",
            "type": "string"
          },
          "loadBalancerClass": {
            "description": "loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.",
            "type": "string"
          },
          "loadBalancerIP": {
            "description": "Only applies to Service Type: LoadBalancer. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations, and it cannot support dual-stack. As of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available. This field may be removed in a future API version.",
            "type": "string"
          },
          "loadBalancerSourceRanges": {
            "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ports": {
            "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "items": {
              "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
            },
            "type": "array",
            "x-kubernetes-list-map-keys": [
              "port",
              "protocol"
            ],
            "x-kubernetes-list-type": "map",
            "x-kubernetes-patch-merge-key": "port",
            "x-kubernetes-patch-strategy": "merge"
          },
          "publishNotReadyAddresses": {
            "description": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered \"ready\" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.",
            "type": "boolean"
          },
          "selector": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "type": "object",
            "x-kubernetes-map-type": "atomic"
          },
          "sessionAffinity": {
            "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n\nPossible enum values:\n - `\"ClientIP\"` is the Client IP based.\n - `\"None\"` - no session affinity.",
            "enum": [
              "ClientIP",
              "None"
            ],
            "type": "string"
          },
          "sessionAffinityConfig": {
            "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig",
            "description": "sessionAffinityConfig contains the configurations of session affinity."
          },
          "type": {
            "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n\nPossible enum values:\n - `\"ClusterIP\"` means a service will only be accessible inside the cluster, via the cluster IP.\n - `\"ExternalName\"` means a service consists of only a reference to an external name that kubedns or equivalent will return as a CNAME record, with no exposing or proxying of any pods involved.\n - `\"LoadBalancer\"` means a service will be exposed via an external load balancer (if the cloud provider supports it), in addition to 'NodePort' type.\n - `\"NodePort\"` means a service will be exposed on one port of every node, in addition to 'ClusterIP' type.",
            "enum": [
              "ClusterIP",
              "ExternalName",
              "LoadBalancer",
              "NodePort"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
  