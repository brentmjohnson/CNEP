apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  namespace: opentelemetry-operator-system
  name: daemonset 
  labels:
    app: opentelemetry-collector
    version: v0.71.0
spec:
  mode: daemonset
  hostNetwork: true
  image: otel/opentelemetry-collector-contrib:0.71.0
  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     effect: NoSchedule
  #   - key: node-role.kubernetes.io/control-plane
  #     effect: NoSchedule
  # podAnnotations:
  #   traffic.sidecar.istio.io/includeInboundPorts: ""   # do not intercept any inbound ports
  #   traffic.sidecar.istio.io/includeOutboundIPRanges: ""  # do not intercept any outbound traffic
  #   proxy.istio.io/config: |  # configure an env variable `OUTPUT_CERTS` to write certificates to the given folder
  #     proxyMetadata:
  #       OUTPUT_CERTS: /etc/istio-output-certs
  #   sidecar.istio.io/userVolume: '[{"name": "istio-certs", "emptyDir": {"medium": "Memory"}}]'
  #   sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]' # mount the shared volume at sidecar proxy
  config: |
    receivers:
      jaeger:
        protocols:
          thrift_http:
            endpoint: 0.0.0.0:14278

      opencensus:
        endpoint: 0.0.0.0:55678

      # Dummy receiver that's never used, because a pipeline is required to have one.
      otlp/spanmetrics:
        protocols:
          grpc:
            endpoint: localhost:12345

      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
            # default limit is 1024 * 1024 * 4 = 4194304
            max_recv_msg_size_mib: 1024
          http:
            endpoint: 0.0.0.0:4318

      zipkin:
        endpoint: 0.0.0.0:9411

      fluentforward:
        endpoint: 0.0.0.0:8006

    exporters:
      prometheus:
        endpoint: 0.0.0.0:8889

      jaeger:
        endpoint: jaeger-collector.observability.svc.cluster.local:14250
        tls:
          insecure: true

      logging:
        loglevel: debug

      loki:
        endpoint: http://loki-loki-distributed-distributor.monitoring.svc.cluster.local:3100/loki/api/v1/push
        # tenant_id: ""
        # labels:
        #   resource:
        #     log_name: "log_name"
        #     zone_name: "zone_name"
        #     cluster_name: "cluster_name"
        #     node_name: "node_name"
        #   attributes:
        #     log_name: "log_name"
        #     cluster_name: "cluster_name"
        #     zone_name: "zone_name"
        #     node_name: "node_name"
        #     namespace_name: "namespace_name"
        #     pod_name: "pod_name"
        #     container_name: "container_name"
        #     # start_time: "start_time"
        #     # method: "method"
        #     # path: "path"
        #     # protocol: "protocol"
        #     # response_code: "response_code"
        #     # response_flags: "response_flags"
        #     # response_code_details: "response_code_details"
        #     # connection_termination_details: "connection_termination_details"
        #     # upstream_transport_failure_reason: "upstream_transport_failure_reason"
        #     # bytes_received: "bytes_received"
        #     # bytes_sent: "bytes_sent"
        #     # duration: "duration"
        #     # upstream_service_time: "upstream_service_time"
        #     # x_forwarded_for: "x_forwarded_for"
        #     # user_agent: "user_agent"
        #     # request_id: "request_id"
        #     # authority: "authority"
        #     # upstream_host: "upstream_host"
        #     # upstream_cluster: "upstream_cluster"
        #     # upstream_local_address: "upstream_local_address"
        #     # downstream_local_address: "downstream_local_address"
        #     # downstream_remote_address: "downstream_remote_address"
        #     # requested_server_name: "requested_server_name"
        #     # route_name: "route_name"
        #     # traceid: "traceid"
        # format: "json"
        # # (default = 512 * 1024) or 4096
        # # write_buffer_size: 4194304

      otlp/spanmetrics:
        endpoint: localhost:4317
        tls:
          insecure: true

    processors:
      batch:
      transform:
        trace_statements:
          - context: span
            statements:
              - set(kind, 2) where kind == 0
      spanmetrics:
        metrics_exporter: otlp/spanmetrics
        latency_histogram_buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
          - name: http.method
            default: GET
          - name: http.status_code
        dimensions_cache_size: 1000
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"  
      resource:
        attributes:
        - action: insert
          key: log_name
          from_attribute: log_name
        - action: insert
          key: zone_name
          from_attribute: zone_name
        - action: insert
          key: cluster_name
          from_attribute: cluster_name
        - action: insert
          key: node_name
          from_attribute: node_name
        - action: insert
          key: loki.resource.labels
          value: log_name, zone_name, cluster_name, node_name
      attributes:
        actions:
        - action: insert
          key: log_name
          from_attribute: log_name
        - action: insert
          key: cluster_name
          from_attribute: cluster_name
        - action: insert
          key: zone_name
          from_attribute: zone_name
        - action: insert
          key: node_name
          from_attribute: node_name
        - action: insert
          key: namespace_name
          from_attribute: namespace_name
        - action: insert
          key: pod_name
          from_attribute: pod_name
        - action: insert
          key: container_name
          from_attribute: container_name
        - action: insert
          key: loki.attribute.labels
          value: log_name, cluster_name, zone_name, node_name, namespace_name, pod_name, container_name

    service:
      pipelines:
        traces:
          receivers: [jaeger, opencensus, otlp, zipkin]
          processors: [transform, spanmetrics, batch]
          exporters: [jaeger]

        # The exporter name must match the metrics_exporter name.
        # The receiver is just a dummy and never used; added to pass validation requiring at least one receiver in a pipeline.
        metrics/spanmetrics:
          receivers: [otlp/spanmetrics]
          exporters: [otlp/spanmetrics]

        metrics:
          receivers: [otlp]
          exporters: [prometheus]

        logs:
          receivers: [otlp, fluentforward]
          processors: [batch, resource, attributes]
          exporters: [loki]