---
- name: Install Jetstack Cert-Manager
  hosts: vm_host
  run_once: true
  vars_files:
    - "{{ playbook_dir }}/../../ansible/hyperv-k8s-provisioner/vars/k8s_cluster.yml"
  tasks:
    - name: Add jetstack chart repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"

    - name: Separately update the jetstack cache
      kubernetes.core.helm:
        release_state: absent
        chart_ref: jetstack
        update_repo_cache: yes
        release_name: undefined
        release_namespace: undefined

    # - name: Load cluster-keys from file
    #   shell: cat {{ playbook_dir }}/../../cluster-keys.json
    #   register: myoutput

    # - ansible.builtin.set_fact:
    #     vault_unseal_keys_b64: "{{myoutput.stdout|from_json|json_query('unseal_keys_b64')}}"
    # # - debug: var=vault_root_token

    # - name: Setting kustomize custom-resources patch templates
    #   ansible.builtin.template:
    #     src: "{{ item }}"
    #     dest: "{{ playbook_dir }}/../helm/values/{{ item | basename | regex_replace('\\.j2$', '') }}"
    #     mode: "0644"
    #   with_fileglob:
    #     - "{{ playbook_dir }}/../helm/values/templates/*.j2"

    - name: Helm template cert-manager chart
      ansible.builtin.shell:
        cmd: helm template
          --version=v1.11.0
          --namespace=cert-manager
          --values={{ playbook_dir }}/../helm/values/cert-manager-values.yaml
          --output-dir={{ playbook_dir }}/../kustomize/cert-manager/base
          cert-manager jetstack/cert-manager

    # - name: Helm template cert-manager chart
    #   kubernetes.core.helm_template:
    #     chart_ref: jetstack/cert-manager
    #     chart_version: "1.10.1"
    #     # release_name: vault
    #     release_namespace: cert-manager
    #     values_files:
    #       - "{{ playbook_dir }}/../helm/values/cert-manager-values.yaml"
    #     include_crds: yes
    #     output_dir: "{{ playbook_dir }}/../kustomize/cert-manager/base"

    - name: Add cert-manager resources to kustomization file
      ansible.builtin.shell:
        cmd: kustomize edit add resource ./base/cert-manager/templates/*.yaml
        chdir: "{{ playbook_dir }}/../kustomize/cert-manager/"

    - name: Kustomize build cert-manager manifests.
      ansible.builtin.shell:
        cmd: kustomize build
        chdir: "{{ playbook_dir }}/../kustomize/cert-manager/"
      register: myoutput
    # - debug: var=myoutput.stdout

    - name: Kustomize copy cert-manager resources.
      ansible.builtin.copy :
        content: "{{ myoutput.stdout }}"
        dest: "{{ playbook_dir }}/../kustomize/cert-manager/resources/resources.yaml"
        mode: "0644"

    - name: Apply cert-manager manifests to the cluster
      kubernetes.core.k8s:
        state: present
        src: "{{ playbook_dir }}/../kustomize/cert-manager/resources/resources.yaml"
        kubeconfig: "{{ playbook_dir }}/../../ansible/hyperv-k8s-provisioner/k8s-setup/clusters/{{ k8s.cluster_name }}/admin.kubeconfig"
        # apply: yes
        # server_side_apply:
        #   field_manager: ansible
        # wait: true
        
    - name: Wait for the cert-manager-webhook deployment
      kubernetes.core.k8s_info:
        kind: Deployment
        wait: yes
        name: cert-manager-webhook
        namespace: cert-manager
      register: myoutput

    - name: Wait for cert-manager api readiness
      ansible.builtin.shell: 
        cmd: | 
          while ! \
            cmctl check api;
          do sleep 1;
          done
      register: myoutput
    # - debug: var=myoutput