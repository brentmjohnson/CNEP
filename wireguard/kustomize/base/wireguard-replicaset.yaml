apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: wireguard
  namespace: wireguard
spec:
  replicas: 3
  selector:
    matchLabels:
      name: wireguard
  template:
    metadata:
      labels:
        name: wireguard
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  name: wireguard
              topologyKey: kubernetes.io/hostname
      hostNetwork: true
      initContainers:
        # The exact name of the network interface needs to be stored in the
        # wg0.conf WireGuard configuration file, so that the routes can be
        # created correctly.
        # The template file only contains the "ENI" placeholder, so when
        # bootstrapping the application we'll need to replace the placeholder
        # and create the actual wg0.conf configuration file.
        - name: "wireguard-template-replacement"
          image: "busybox"
          command: ["sh", "-c", "ENI=$(ip route get 1.1.1.1 | grep 1.1.1.1 | awk '{print $5}'); sed \"s/ENI/$ENI/g\" /etc/wireguard-secret/$(hostname).conf.template > /config/wg0.conf; chmod 400 /config/wg0.conf"]
          volumeMounts:
            - name: wireguard-config
              mountPath: /config/
            - name: wireguard-secret
              mountPath: /etc/wireguard-secret/

      containers:
        - name: "wireguard"
          image: linuxserver/wireguard:alpine-v1.0.20210914-ls20
          volumeMounts:
            - name: wireguard-config
              mountPath: /config/
              readOnly: false
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
      volumes:
        - name: wireguard-config
          emptyDir: {}
        - name: wireguard-secret
          secret:
            secretName: wireguard